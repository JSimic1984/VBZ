-- Aufgabe 9 - Ankunftszeiten Tabelle 
---zusätzliche Spalten für Datumzeit_nach mit den konvertierten Daten gefüllt

alter table fahrzeiten_soll_ist add datumzeit_ist_an_nach DATETIME NULL;

update fahrzeiten_soll_ist set datumzeit_ist_an_nach = DATE_ADD(STR_TO_DATE
(datum_von ,'%d.%m.%Y'), interval ist_an_nach1 SECOND);

alter table fahrzeiten_soll_ist add datumzeit_soll_an_nach DATETIME NULL;

update fahrzeiten_soll_ist set datumzeit_soll_an_nach = DATE_ADD(STR_TO_DATE
(datum_von ,'%d.%m.%Y'), interval soll_an_nach SECOND);

alter table fahrzeiten_soll_ist add datumzeit_soll_ab_nach DATETIME NULL;

update fahrzeiten_soll_ist set datumzeit_soll_ab_nach = DATE_ADD(STR_TO_DATE
(datum_von ,'%d.%m.%Y'), interval soll_ab_nach SECOND);

create table ankunftszeiten 

select 
     fsi.halt_punkt_id_nach as haltepunkt_id,
     fsi.fahrweg_id,
     fsi.fahrt_id,
     fsi.datumzeit_ist_an_nach as datumzeit_ist_an,
     fsi.datumzeit_soll_an_nach as datumzeit_soll_an,
     fsi.datumzeit_soll_ab_nach as datumzeit_soll_ab,
     TIMESTAMPDIFF ( second, datumzeit_soll_an_nach, datumzeit_ist_an_nach)
     as delay
from 
    vbzdat.fahrzeiten_soll_ist fsi
where 
    fsi.linie = 3
         
 union   

select 
     fsi.halt_punkt_id_von as haltepunkt_id,
     fsi.fahrweg_id,
     fsi.fahrt_id,
     fsi.datumzeit_ist_an_von as datumzeit_ist_an,
     fsi.datumzeit_soll_an_von as datumzeit_soll_an,
     fsi.datumzeit_soll_ab_von as datumzeit_soll_ab,
     TIMESTAMPDIFF ( second, datumzeit_soll_an_von , datumzeit_ist_an_von)
     as delay
from 
    vbzdat.fahrzeiten_soll_ist fsi  
where 
      fsi.seq_von = 1
      and fsi.linie  = 3;


ALTER TABLE vbzdat.ankunftszeiten add id int primary key auto_increment first;

alter table vbzdat.ankunftszeiten add constraint ankunftszeiten_FK 
foreign key (haltepunkt_id) references haltepunkt(halt_punkt_id);

alter table vbzdat.ankunftszeiten  add constraint ankunftszeiten_FK_1 foreign key
(fahrweg_id) references linie (fahrweg_id);

